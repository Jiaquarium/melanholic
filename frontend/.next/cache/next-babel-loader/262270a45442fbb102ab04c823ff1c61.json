{"ast":null,"code":"import fs from 'fs';\nimport path from 'path';\nimport matter from 'gray-matter';\nconst postsDirectory = path.join(process.cwd(), 'posts-data');\n\nfunction getAllFileData(fileNames) {\n  return fileNames.map(fileName => {\n    return new Promise((resolve, reject) => {\n      return resolve(\"something\"); // remove md from fileName to get Id\n      // const Id = fileName.replace(/\\.md$/, '');\n      // // read markdown as string\n      // const fullPath = path.join(postsDirectory, fileName);\n      // return fs.readFile(fullPath, {encoding: 'utf8'}, (err, fileContents) => {\n      //     // use gray-matter to parse through YAML \"front-matter\"\n      //     console.log(\"fileContents\" + fileContents);\n      //     const matterResult = matter(fileContents);\n      //     // combine the data with Id\n      //     if (err)\n      //     {\n      //         return reject(err);\n      //     }\n      //     else\n      //     {\n      //         return resolve({\n      //             Id,\n      //             ...matterResult.data\n      //         });\n      //     };\n      // });\n    });\n  });\n}\n\nexport async function getSortedPostsData() {\n  // get file names under post\n  return fs.readdir(postsDirectory, (err, fileNames) => {\n    Promise.all(getAllFileData).then(allPostData => {\n      console.log(\"ALL POSTS DATAAAA\" + allPostData);\n      return allPostData.sort((a, b) => a.date < b.date ? 1 : -1);\n    }).catch(err => {\n      console.log(\"something went wrong\");\n    });\n  });\n}\n;","map":{"version":3,"sources":["/Users/jamesgu/github/personal/melanholic/nextjs-blog/lib/posts-data.js"],"names":["fs","path","matter","postsDirectory","join","process","cwd","getAllFileData","fileNames","map","fileName","Promise","resolve","reject","getSortedPostsData","readdir","err","all","then","allPostData","console","log","sort","a","b","date","catch"],"mappings":"AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,MAAMC,cAAc,GAAGF,IAAI,CAACG,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,YAAzB,CAAvB;;AAEA,SAASC,cAAT,CAAwBC,SAAxB,EACA;AACI,SAAOA,SAAS,CAACC,GAAV,CAAcC,QAAQ,IAAI;AAC7B,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KACnB;AACI,aAAOD,OAAO,CAAC,WAAD,CAAd,CADJ,CAEI;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA1BM,CAAP;AA2BH,GA5BM,CAAP;AA6BH;;AAED,OAAO,eAAeE,kBAAf,GAAoC;AACvC;AACA,SAAOd,EAAE,CAACe,OAAH,CAAWZ,cAAX,EAA2B,CAACa,GAAD,EAAMR,SAAN,KAAoB;AAClDG,IAAAA,OAAO,CAACM,GAAR,CACIV,cADJ,EAEEW,IAFF,CAEOC,WAAW,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBF,WAAlC;AACA,aAAOA,WAAW,CAACG,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAAlD,CAAP;AACH,KALD,EAKGC,KALH,CAKSV,GAAG,IAAI;AACZI,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH,KAPD;AAQH,GATM,CAAP;AAUH;AAAA","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport matter from 'gray-matter'\n\nconst postsDirectory = path.join(process.cwd(), 'posts-data');\n\nfunction getAllFileData(fileNames)\n{\n    return fileNames.map(fileName => {\n        return new Promise((resolve, reject) =>\n        {\n            return resolve(\"something\");\n            // remove md from fileName to get Id\n            // const Id = fileName.replace(/\\.md$/, '');\n            \n            // // read markdown as string\n            // const fullPath = path.join(postsDirectory, fileName);\n            // return fs.readFile(fullPath, {encoding: 'utf8'}, (err, fileContents) => {\n            //     // use gray-matter to parse through YAML \"front-matter\"\n            //     console.log(\"fileContents\" + fileContents);\n            //     const matterResult = matter(fileContents);\n        \n            //     // combine the data with Id\n            //     if (err)\n            //     {\n            //         return reject(err);\n            //     }\n            //     else\n            //     {\n            //         return resolve({\n            //             Id,\n            //             ...matterResult.data\n            //         });\n            //     };\n            // });\n        })\n    });\n}\n\nexport async function getSortedPostsData() {\n    // get file names under post\n    return fs.readdir(postsDirectory, (err, fileNames) => {\n        Promise.all(\n            getAllFileData\n        ).then(allPostData => {\n            console.log(\"ALL POSTS DATAAAA\" + allPostData);\n            return allPostData.sort((a, b) => a.date < b.date ? 1 : -1)\n        }).catch(err => {\n            console.log(\"something went wrong\");\n        })\n    });\n};"]},"metadata":{},"sourceType":"module"}